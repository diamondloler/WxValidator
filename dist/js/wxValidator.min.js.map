{"version":3,"sources":["wxValidator.js"],"names":["root","factory","module","exports","define","amd","WxValidator","global","window","this","src","rules","messages","key","split","str2Array","collectedErrors","Object","create","removeRuleAndWarn","ruleList","index","currRule","splice","console","warn","prototype","ruleMethods","required","val","test","phone","date","email","getValue","validate","value","ruleName","fn","i","vm","errKey","errorMsg","allTrue","getCheckFunc","push","rule","getError","register","handler","Error","singleValid","message","result","e","msg"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,QAAAA,OAAAC,QACAD,OAAAC,QAAAF,IACA,mBAAAG,QAAAA,OAAAC,IACAD,OAAA,GAAAH,GAEAD,EAAAM,YAAAL,IANA,CAQA,oBAAAM,OAAAA,OAAA,oBAAAC,OAAAA,OAAAC,KAAA,WAQA,IAaAH,EAAA,SAAAI,EAAAC,EAAAC,GACAH,KAAAE,MAdA,SAAAA,GACA,IAAA,IAAAE,KAAAF,EACAA,EAAAE,GAAAF,EAAAE,GAAAC,MAAA,KAEA,OAAAH,EAUAI,CAAAJ,GACAF,KAAAC,IAAAA,EACAD,KAAAG,SAAAA,EACAH,KAAAO,gBAAAC,OAAAC,OAAA,OAiEA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAC,GACAD,EAAAG,OAAAF,EAAA,GACAG,QAAAC,KACA,eACAH,EACA,4EA4CA,OAhHAhB,EAAAoB,UAAAC,YAAA,CACAC,SAAA,SAAAC,GACA,OAAA,QAAAC,KAAAD,IAEAE,MAAA,SAAAF,GACA,MAAA,kBAAAC,KAAAD,IAEAG,KAAA,SAAAH,GACA,MAAA,0DAAAC,KAAAD,IAEAI,MAAA,SAAAJ,GACA,MAAA,gFAAAC,KAAAD,KAIAvB,EAAAoB,UAAAQ,SAAA,SAAArB,GACA,OAAAJ,KAAAC,IAAAG,IAOAP,EAAAoB,UAAAS,SAAA,WACA,IACAf,EACAgB,EACAC,EAEAC,EACAC,EA0CAC,EAAA3B,EACA4B,EACAC,EAlDAC,GAAA,EAQA,IAAA,IAAA9B,KAAAJ,KAAAC,IAAA,CAKA,GAJAU,EAAAX,KAAAE,MAAAE,GAIA,OAHAuB,EAAA3B,KAAAyB,SAAArB,IAGA,OAEA,QAJA0B,EAAA,KAIAnB,EACA,KAAAiB,EAAAjB,EAAAmB,OACAD,EAAA7B,KAAAmC,aAAAP,KASA,IAFAC,EAAAF,KAGAO,GAAA,OAsBAF,EAAAA,EArBAJ,EAqBA,KADAxB,EApBAA,GAsBA6B,GAFAF,EApBA/B,MAsBAG,SAAA6B,IACAD,EAAAxB,gBAAAH,KAAA2B,EAAAxB,gBAAAH,GAAA,KAAAgC,KAAAH,GAAA,SA/BAvB,EAAAC,EAAAmB,GAcA,OAAAI,GAoBArC,EAAAoB,UAAAkB,aAAA,SAAAE,GACA,OAAArC,KAAAkB,YAAAmB,IAGAxC,EAAAoB,UAAAqB,SAAA,SAAAlC,GACA,OAAAJ,KAAAO,gBAAAH,IAAA,MAGAP,EAAA0C,SAAA,SAAAX,EAAAY,GACA,GAAA,mBAAAA,EAAA,MAAA,IAAAC,MAAA,kCACAzC,KAAAiB,UAAAC,YAAAU,GAAAY,GAUA3C,EAAA6C,YAAA,SAAAtB,EAAAiB,EAAAM,GACA,IACA,IAAAC,EAAA5C,KAAAiB,UAAAkB,aAAAE,EAAArC,CAAAoB,GACA,MAAAyB,GACA,MAAA,IAAAJ,MAAA,8DAGA,MAAA,CACAG,OAAAA,EACAE,KAAA,IAAAF,GAAAD,GAAA,OAKA9C","file":"wxValidator.min.js","sourcesContent":["(function (root, factory) {\r\n    if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory();\r\n    } else if (typeof define === 'function' && define.amd) {\r\n        define([], factory);\r\n    } else {\r\n        root.WxValidator = factory();\r\n    }\r\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function () {\r\n\r\n    /**\r\n     * helper\r\n     * 格式化对象，如：key值由'required|phone'变成 ['required', 'phone']\r\n     * @param {Object} rules \r\n     * @return {Object}\r\n     */\r\n    var str2Array = function (rules) {\r\n        for (var key in rules) {\r\n            rules[key] = rules[key].split('|')\r\n        }\r\n        return rules\r\n    }\r\n\r\n    /**\r\n     * constructor\r\n     * @param {Object} src 待验证的数据对象\r\n     * @param {Object} rules 与src键名一致的规则对象\r\n     * @param {Object} messages 错误信息对象，命名的方式为 规则名 + '.' + 数据对象的 key\r\n     */\r\n    var WxValidator = function (src, rules, messages) {\r\n        this.rules = str2Array(rules)\r\n        this.src = src\r\n        this.messages = messages\r\n        this.collectedErrors = Object.create(null)\r\n    }\r\n\r\n    WxValidator.prototype.ruleMethods = {\r\n        'required': function (val) {\r\n            return !(/^\\s*$/).test(val)\r\n        },\r\n        'phone': function (val) {\r\n            return /^1[34578]\\d{9}$/.test(val)\r\n        },\r\n        'date': function (val) {\r\n            return /^[1-9]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$/.test(val)\r\n        },\r\n        'email': function (val) {\r\n            return /^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$/.test(val)\r\n        }\r\n    }\r\n\r\n    WxValidator.prototype.getValue = function (key) {\r\n        return this.src[key]\r\n    }\r\n\r\n    /**\r\n     * 验证\r\n     * @return {Boolean}\r\n     */\r\n    WxValidator.prototype.validate = function () {\r\n        var allTrue = true;\r\n        var ruleList;\r\n        var value;\r\n        var ruleName;\r\n        var flag;\r\n        var fn;\r\n        var i;\r\n\r\n        for (var key in this.src) {\r\n            ruleList = this.rules[key];\r\n            value = this.getValue(key);\r\n            i = 0;\r\n\r\n            if (value == null) return;\r\n\r\n            if (typeof ruleList !== 'undefined') {\r\n                while (ruleName = ruleList[i++]) {\r\n                    fn = this.getCheckFunc(ruleName)\r\n\r\n                    if (!fn) {\r\n                        removeRuleAndWarn(ruleList, i)\r\n                        continue;\r\n                    }\r\n\r\n                    flag = fn(value)\r\n\r\n                    if (flag === false) {\r\n                        allTrue = false\r\n                        collectError(this, key, ruleName)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return allTrue\r\n    }\r\n\r\n\r\n    function removeRuleAndWarn(ruleList, index) {\r\n        var currRule = ruleList[index]\r\n        ruleList.splice(index, 1)\r\n        console.warn(\r\n            'Rule name: \\\"' +\r\n            currRule +\r\n            '\\\", please don\\'t add the rule of unregistered for data that it be verify'\r\n        )\r\n    }\r\n\r\n    function collectError(vm, key, ruleName) {\r\n        var errKey = ruleName + '.' + key;\r\n        var errorMsg = vm.messages[errKey];\r\n        (vm.collectedErrors[key] || (vm.collectedErrors[key] = [])).push(errorMsg || '默认错误');\r\n    }\r\n\r\n    WxValidator.prototype.getCheckFunc = function (rule) {\r\n        return this.ruleMethods[rule]\r\n    }\r\n\r\n    WxValidator.prototype.getError = function (key) {\r\n        return this.collectedErrors[key] || null\r\n    }\r\n\r\n    WxValidator.register = function (ruleName, handler) {\r\n        if (typeof handler !== 'function') throw new Error('The handler must be a function');\r\n        this.prototype.ruleMethods[ruleName] = handler;\r\n    }\r\n\r\n    /**\r\n     * 对单一普通值快速验证\r\n     * @param {String, Number} val 所要验证的普通值\r\n     * @param {String} rule 验证规则\r\n     * @param {String} message 对应的错误信息\r\n     * @return {Object} 结果\r\n     */\r\n    WxValidator.singleValid = function (val, rule, message) {\r\n        try {\r\n            var result = this.prototype.getCheckFunc(rule)(val)\r\n        } catch (e) {\r\n            throw new Error('WxValidator.singleValid can not call the rule of undefined')\r\n        }\r\n\r\n        return {\r\n            result: result,\r\n            msg: (result === false && message) || '正确'\r\n        }\r\n    }\r\n\r\n\r\n    return WxValidator\r\n\r\n})"]}